class ListNode {
    int val;
    ListNode next;

    ListNode() {}

    ListNode(int val) {
        this.val = val;
    }

    ListNode(int val, ListNode next) {
        this.val = val;
        this.next = next;
    }
}

class LinkedList1 {
    private ListNode head = null;
    private int count=0;

    public void add(int val) {
        if(head==null) {
        	head=new ListNode(val,null);
        	count++;
        	return;
        }
        ListNode curr=head;
        while(curr.next!=null) {
        	curr=curr.next;
        }
        curr.next=new ListNode(val,null);
        		count++;
    }

    public int size() {
        return count;
    }

    public int get(int index) {
        if (index < 0 || index >= size()) {
            throw new IndexOutOfBoundsException("Index out of bounds");
        }
        ListNode current = head;
        for (int i = 0; i < index; i++) {
            current = current.next;
        }
        return current.val;
    }

    public static LinkedList1 addTwoNumbers(LinkedList1 l1, LinkedList1 l2) {
        LinkedList1 result = new LinkedList1();
        ListNode p = l1.head;
        ListNode q = l2.head;
        ListNode current = result.head;
        int carry = 0;

        while (p != null || q != null) {
            int x = (p != null) ? p.val : 0;
            int y = (q != null) ? q.val : 0;
            int sum = x + y + carry;

            carry = sum / 10;
            result.add(sum % 10);

            if (p != null) p = p.next;
            if (q != null) q = q.next;
        }

        if (carry > 0) {
            result.add(carry);
        }

        return result;
    }
}

public class AddTwoNumbers {
    public static void main(String[] args) {
        LinkedList1 l1 = new LinkedList1();
        l1.add(9);
        l1.add(9);
        l1.add(9);
        l1.add(9);
        l1.add(9);
        l1.add(9);
        l1.add(9);

        LinkedList1 l2 = new LinkedList1();
        l2.add(9);
        l2.add(9);
        l2.add(9);
        l1.add(9);

        LinkedList1 l3 = LinkedList1.addTwoNumbers(l1, l2);

        for (int i = 0; i < l3.size(); i++) {
            System.out.print(l3.get(i));
        }
    }
}
